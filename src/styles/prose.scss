.ProseMirror {
	/* Underline fix (extension-underline) */
	text-underline-position: under;

	/* Horizontal rule */
	hr {
		cursor: pointer;
	}

	/* allow the editable area to fill the parent */
	min-height: inherit;
	/* required for proper rendering */
	word-wrap: break-word;
	font-variant-ligatures: none;
	white-space: pre-wrap;
	white-space: break-spaces;

	p {
		margin-bottom: 0.8em !important;
	}

	[data-placeholder] {
		position: relative;
	}

	.s-code-block.markdown[data-placeholder] {
		overflow: visible;
	}

	[data-placeholder]:before {
		color: var(--fc-light);
		content: attr(data-placeholder);
		pointer-events: none;
		position: absolute;
	}

	[readonly] :is(.ProseMirror [data-placeholder]):before {
		color: inherit;
	}

	.ProseMirror-hideselection ::selection {
		background: transparent;
	}

	.ProseMirror-selectednode {
		box-shadow: 0 0 0 4px var(--focus-ring);
	}

	/* reset whitespace to normal inside externally sourced widgets */
	.ProseMirror-widget {
		word-wrap: normal;
		white-space: normal;
	}

	/* can manually place on the contentDOM element of NodeViews to reset .Prosemirror-widget */
	.ProseMirror-widget .ProseMirror-contentdom {
		word-wrap: break-word;
		white-space: pre-wrap; /* fallback if break-spaces is not supported */
		white-space: break-spaces;
	}

	img {
		max-width: 100%;
	}

	/* set the children of spoilers visible so we can edit them */
	&.s-prose .spoiler * {
		visibility: visible;
	}

	/* Our editor often wraps things in their own divs. These wrappers should have the proper spacing below them */
	&.s-prose div {
		margin-bottom: var(--s-prose-spacing);
	}

	&.s-prose div:last-child,
	&.s-prose div:only-child {
		margin-bottom: 0;
	}

	&.s-prose ol div,
	&.s-prose ul div {
		margin-bottom: var(--s-prose-spacing-condensed);
	}

	/* ensure proper line breaks in markdown-mode where everything is one big code block */
	code,
	pre {
		word-wrap: break-word;
		white-space: pre-wrap;
	}

	/* and reset any properties on the root pre/code that might be explicitly set elsewhere */
	> code,
	> pre {
		background-color: inherit;
		border-radius: 0;
		margin: 0;
		max-height: unset;
		padding: 0;
		width: auto;
	}

	/* overrides for only when the editor is writable (not readonly) */
	/* only affect a tags that are within nodes (avoids selecting links inside link previews) */
	&[contenteditable="true"] p > a[href] {
		/* links are not "clickable", but "editable", */
		/* so inherit the cursor from the editor */
		cursor: inherit;
	}

	/* dim the content on pre/code since their text color is unaffected */
	&[contenteditable="false"]:not(.s-markdown-preview) code,
	&[contenteditable="false"]:not(.s-markdown-preview) pre {
		opacity: 80%;
	}

	/* make sure widgets all conform as well */
	&[contenteditable="false"]:not(.s-markdown-preview) .ProseMirror-widget,
	&[contenteditable="false"]:not(.s-markdown-preview) .ProseMirror-widget * {
		background-color: inherit;
	}
}

.preview {
	hr {
		cursor: default;
	}
}
